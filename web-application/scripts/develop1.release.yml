---
# Source: web-application/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: develop1-mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.31.2
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: develop1-mongodb
---
# Source: web-application/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: develop1-web-application
  labels:
    helm.sh/chart: web-application-0.0.2
    app.kubernetes.io/name: web-application
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: web-application/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: develop1-mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.31.2
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
type: Opaque
data:
  mongodb-root-password: "cm9vdA=="
  mongodb-passwords: "c2VydmljZQ=="
---
# Source: web-application/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: develop1-mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.31.2
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
  storageClassName: managed
---
# Source: web-application/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: develop1-mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.31.2
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/component: mongodb
---
# Source: web-application/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: develop1-web-application
  labels:
    helm.sh/chart: web-application-0.0.2
    app.kubernetes.io/name: web-application
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: web-application
    app.kubernetes.io/instance: develop1
---
# Source: web-application/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: develop1-mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.31.2
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: develop1
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-10.31.2
        app.kubernetes.io/instance: develop1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: develop1-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb
                    app.kubernetes.io/instance: develop1
                    app.kubernetes.io/component: mongodb
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        sysctls: []
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:4.4.11-debian-10-r7
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MONGODB_EXTRA_USERNAMES
              value: "service"
            - name: MONGODB_EXTRA_DATABASES
              value: "app"
            - name: MONGODB_EXTRA_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: develop1-mongodb
                  key: mongodb-passwords
            - name: MONGODB_ROOT_USER
              value: "root"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: develop1-mongodb
                  key: mongodb-root-password
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  # Run the proper check depending on the version
                  [[ $(mongo --version | grep "MongoDB shell") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
                  . /opt/bitnami/scripts/libversion.sh
                  VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
                  VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
                  VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
                  if [[ "$VERSION_MAJOR" -ge 4 ]] && [[ "$VERSION_MINOR" -ge 4 ]] && [[ "$VERSION_PATCH" -ge 2 ]]; then
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
                  else
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'
                  fi
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: develop1-mongodb
---
# Source: web-application/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: develop1-web-application
  labels:
    helm.sh/chart: web-application-0.0.2
    app.kubernetes.io/name: web-application
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: web-application
      app.kubernetes.io/instance: develop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: web-application
        app.kubernetes.io/instance: develop1
    spec:
      serviceAccountName: develop1-web-application
      containers:
        - name: web-application
          securityContext:
            null
          env: 
             
            - name: MONGO_PORT
              value:  "27017"
            - name: MONGO_URL
              value:  mongodb://root:root@develop1-mongodb
            - name: MONGO_HOST
              value:  develop1-mongodb
            - name: MONGO_USER
              value: root
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: develop1-mongodb
                  key: mongodb-root-password
            
            
                 
          image: "ugleiton/mongo-gui:latest"
          imagePullPolicy: IfNotPresent
          ports: 
            - containerPort: 4321
              name: http
              protocol: TCP  
          livenessProbe: 
            httpGet:
              path: /databases/admin/collections/system.version/documents
              port: http  
          readinessProbe: 
            httpGet:
              path: /databases/admin/collections/system.version/documents
              port: http  
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: web-application/templates/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: develop1-web-application
  labels:
    helm.sh/chart: web-application-0.0.2
    app.kubernetes.io/name: web-application
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: develop1-web-application
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
---
# Source: web-application/templates/ingress.yaml
apiVersion:  networking.k8s.io/v1
kind: Ingress
metadata:
  name: develop1-web-application
  labels:
    helm.sh/chart: web-application-0.0.2
    app.kubernetes.io/name: web-application
    app.kubernetes.io/instance: develop1
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - "some.hostname.de"
      secretName: some.hostname.de
  rules:
    - host: "some.hostname.de"
      http:
        paths:
          - path: /develop1
            pathType: Prefix
            backend:
              service:
                name: develop1-web-application
                port:  
                  number: 80
