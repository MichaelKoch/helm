# Default values for web-application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  environments:
  
imagePullSecrets: [

]

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: 
    kubernetes.io/ingress.class: nginx
    
  hosts:
    - host: public.cliap.de
      paths:
      - path: ''
        backend:
          serviceName: public.cliap.de
          servicePort: 80

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. 
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

#####################################
####   MONGO DB CONFIGURATION     ###
#####################################
mongodb:
  enabled: true
  global:
    storageClass: "managed"
    namespaceOverride: ""
  # image:
  #   registry: docker.io
  #   repository: bitnami/mongodb
  #   tag: 5.0.6-debian-10-r2
    
  clusterDomain: mongo.local
  architecture: standalone
  auth:
    ## @param auth.enabled Enable authentication
    ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
    ##
    enabled: true
    rootUser: root
    ## @param auth.rootPassword MongoDB&reg; root password
    ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
    ##
    rootPassword: "root"
    usernames: ['user']
    passwords: ['user']
    databases: ['user']

#####################################
####   SQL SERVER  CONFIGURATION  ###
#####################################
mssql-linux:
  enabled: true
  acceptEula:
  value: "Y"
  edition:
    value: Express
  collation: SQL_Latin1_General_CP1_CI_AS
  lcid: 1033
  hadr: 0
  agent:
    enabled: false
  # Override sapassword in templates/secret.yaml
  # sapassword: "MyStrongPassword1234"
  existingSecret: ""
  existingSecretKey: sapassword
  image:
    repository: mcr.microsoft.com/mssql/server
    tag: 2019-latest
    pullPolicy: IfNotPresent

  persistence:
    enabled: true
    storageClass: "azurefile"
    dataAccessMode: ReadWriteOnce
    dataSize: 2Gi
    transactionLogAccessMode: ReadWriteOnce
    transactionLogSize: 1Gi
    backupAccessMode: ReadWriteOnce
    backupSize: 1Gi
    masterAccessMode: ReadWriteOnce
    masterSize: 1Gi
  livenessprobe:
    initialDelaySeconds: 15
    periodSeconds: 20
  readinessprobe:
    initialDelaySeconds: 10
    periodSeconds: 30
  resources:
    limits:
    #  cpu: 100m
      memory: 1Gi
    # requests:
    #  cpu: 100m
    #  memory: 2Gi
  nodeSelector: {}
    # kubernetes.io/hostname: minikube

  tolerations: []

  affinity: {}

  securityContext: {}
    # runAsUser: 1000

